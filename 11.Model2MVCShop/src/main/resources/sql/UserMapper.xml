<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">
 	
 	
	<resultMap id="userSelectMap" type="user">
		<result property="userId" 		column="user_id" 		jdbcType="VARCHAR"/>
		<result property="userName"		column="user_name" 		jdbcType="VARCHAR" />
		<result property="password" 	column="password" 		jdbcType="VARCHAR" />
		<result property="role" 		column="role" 			jdbcType="VARCHAR" />
		<result property="ssn" 			column="ssn" 			jdbcType="VARCHAR" />
		<result property="phone" 		column="cell_phone" 	jdbcType="VARCHAR" />
		<result property="email" 		column="email" 			jdbcType="NUMERIC"  />
		<result property="regDate" 		column="reg_date" 		jdbcType="DATE" />
		<result property="postcode" 	column="postcode" 		jdbcType="VARCHAR" />
		<result property="address" 		column="address" 		jdbcType="VARCHAR" />
		<result property="address2" 	column="address2" 		jdbcType="VARCHAR" />
		<result property="userIdKakao" 	column="user_id_kakao"  jdbcType="VARCHAR" />
		<result property="userIdNaver" 	column="user_id_naver"  jdbcType="VARCHAR" />
		<result property="userStatusCode" 	column="user_status_code"  	jdbcType="VARCHAR" />
		<result property="emailCode" 		column="email_code"  		jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addUser"		parameterType="user" >
	 	INSERT
		INTO users( user_id , user_name , password , role , ssn, 
					cell_phone, email , reg_date, 
					postcode, address, address2, 
					user_id_kakao, user_id_naver,
					user_status_code, email_code) 
		VALUES	 (	#{userId} , #{userName} , #{password} , 'user' , #{ssn:VARCHAR} , 
							#{phone:VARCHAR} , #{email:VARCHAR} , SYSDATE ,
							#{postcode:VARCHAR}, #{address:VARCHAR}, #{address2:VARCHAR}, 
							#{userIdKakao:VARCHAR}, #{userIdNaver:VARCHAR},
							#{userStatusCode:VARCHAR}, #{emailCode:VARCHAR})
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getUser"	parameterType="string"	resultMap="userSelectMap">
		SELECT
		user_id , user_name , password , role ,  cell_phone ,  email , 
		reg_date , postcode, address, address2, user_id_kakao, user_id_naver,
		user_status_code, email_code
		FROM users 
		WHERE user_id = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateUser"	parameterType="user" >
	   	UPDATE users
	   	<set>
	   		user_name 	= #{userName} ,
			cell_phone	= #{phone},
			email		= #{email},
			postcode	= #{postcode}, 
			address		= #{address}, 
			address2	= #{address2}
	   	</set>
	   	WHERE user_id = #{userId}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getUserList"  parameterType="search"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT user_id , user_name , email
											FROM users
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				user_id LIKE '%'||#{searchKeyword}||'%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				user_name LIKE '%'||#{searchKeyword}||'%'
													</if>
												</where>
											</if>
											ORDER BY user_id ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT user_id , user_name , email
						FROM users
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			user_id = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 		user_name = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
	 <select id="checkUser" parameterType="map"	resultMap="userSelectMap">
		SELECT
		user_id , user_name , password , role ,  cell_phone ,  email , reg_date , 
		postcode, address, address2, user_id_kakao, user_id_naver,
		user_status_code, email_code
		FROM users 
		<where>
			<if test="type == 'ka'">
				user_id_kakao = #{userId2}
			</if>
			<if test="type == 'na'">
				user_id_naver = #{userId2}
			</if>
		</where>
	 </select>
	 
	 <update	id="updateUserId"	parameterType="user" >
	   	UPDATE users
	   	<set>
			<if test="type == 'ka'">
				user_id_kakao = #{userId2}
			</if>
			<if test="type == 'na'">
				user_id_naver = #{userId2}
			</if>
	   	</set>
	   	WHERE user_id = #{userId}
	 </update>
	 
	 <update id="updateStatusCode" parameterType="user">
	 	UPDATE users
	 	<set>
	 		user_status_code = #{userStatusCode}
	 	</set>
	 	WHERE user_id = #{userId}
		<if test="emailCode != null">
	 	  AND email_code = #{emailCode}
	 	</if>
	 </update>
	 
</mapper>